resource_registry:
  # Network Interface templates to use (these files must exist)
  OS::TripleO::Compute::Net::SoftwareConfig: ../compute.yaml
  OS::TripleO::Controller::Net::SoftwareConfig: ../controller.yaml

  OS::TripleO::NodeExtraConfigPost: ../post-install.yaml

  # Reboot before network
  OS::TripleO::ComputeHCI::PreNetworkConfig: /usr/share/openstack-tripleo-heat-templates/extraconfig/pre_network/host_config_and_reboot.yaml

parameter_defaults:
  # This section is where deployment-specific configuration is done
  # CIDR subnet mask length for provisioning network
  ControlPlaneSubnetCidr: '24'
  # Gateway router for the provisioning network (or Undercloud IP)
  ControlPlaneDefaultRoute: 192.0.2.1
  ControlPlaneIp: 192.0.2.1
  EC2MetadataIp: 192.0.2.1  # Generally the IP of the Undercloud
  # Customize the IP subnets to match the local environment
  InternalApiNetCidr: 172.17.0.0/24
  StorageNetCidr: 172.18.0.0/24
  StorageMgmtNetCidr: 172.19.0.0/24
  TenantNetCidr: 172.20.0.0/24
  ExternalNetCidr: 10.19.111.0/24
  # Customize the VLAN IDs to match the local environment
  InternalApiNetworkVlanID: 1020
  StorageNetworkVlanID: 1030
  StorageMgmtNetworkVlanID: 1040
  TenantNetworkVlanID: 1050
  ExternalNetworkVlanID: 111
  # Customize the IP ranges on each network to use for static IPs and VIPs
  InternalApiAllocationPools: [{'start': '172.17.0.100', 'end': '172.17.0.200'}]
  StorageAllocationPools: [{'start': '172.18.0.100', 'end': '172.18.0.200'}]
  StorageMgmtAllocationPools: [{'start': '172.19.0.100', 'end': '172.19.0.200'}]
  TenantAllocationPools: [{'start': '172.20.0.100', 'end': '172.20.0.200'}]
  # Leave room if the external network is also used for floating IPs
  ExternalAllocationPools: [{'start': '10.19.111.100', 'end': '10.19.111.150'}]
  ExternalNetworkVip: 10.19.111.151

  # Specify the NTP server for nodes to use
  NtpServer: 10.5.26.10

  # Gateway router for the external network
  ExternalInterfaceDefaultRoute: 10.19.111.254

  DnsServers: ["10.16.36.29","10.11.5.19"]

  # Set to empty string to enable multiple external networks or VLANs
  NeutronExternalNetworkBridge: "''"

  # Customize bonding options, e.g. "mode=4 lacp_rate=1 updelay=1000 miimon=100"
  # LinuxBondInterfaceOptions: "mode=802.3ad" <== Don't use this use next one specifying details to make it faster
  LinuxBondInterfaceOptions: "mode=4 lacp_rate=1 updelay=1000 miimon=100"
  BondInterfaceOvsOptions: "bond_mode=active-backup lacp=active"

  # Flavor of controller and compute nodes:
  OvercloudControlFlavor: controller
  OvercloudComputeFlavor: compute

  # Number of nodes to deploy.
  ControllerCount: 1
  ComputeCount: 1

  ##################################
  # Common performance paramenters
  ##################################

  # Set the tunnel type for tenant network (for example, vxlan or gre). To disable the tunnel type parameter, set the value to ""
  NeutronTunnelTypes: "vxlan"

  # Set the tenant network type for OpenStack Networking. The options available are vlan or vxlan:
  NeutronNetworkType: 'vxlan,vlan'

  NeutronNetworkVLANRanges: "datacentre:1000:2000"
  NeutronBridgeMappings: "datacentre:br-all"

  # DHCP provide metadata route to VM.
  NeutronEnableIsolatedMetadata: true
  # DHCP always provides metadata route to VM.
  NeutronEnableForceMetadata: true
  # Configure the classname of the firewall driver to use for implementing security groups.
  NeutronOVSFirewallDriver: openvswitch
